# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
minversion = 3.15
envlist = isort, black, ruff, pylint, mypy, refurb, pep257, py3{8,9,10,11,12}, readme, doc8, docs, py3{8,9,10,11,12}-nocov
skip_missing_interpreters = True

[testenv]
recreate = True
usedevelop = True
passenv =
  http_proxy
  HTTP_PROXY
  https_proxy
  HTTPS_PROXY
  no_proxy
  NO_PROXY
setev = PYTHONDONTWRITEBYTECODE=1
deps =
  sphinx
  -r{toxinidir}/pytest_requirements.txt
  pytest-html
  py3{8,9,10,11,12}-nocov: Cython
  py3{8,9,10,11,12}-nocov: build
  py3{8,9,10,11,12}-nocov: setuptools_scm[toml]>=6.2
  -r{toxinidir}/CI_REQUIREMENTS.txt

commands =
  pip freeze
  py.test --cov-report html --self-contained-html --html=report.html --cov=threaded {posargs:test}
  coverage report --fail-under 90

[testenv:py3{8,9,10,11,12}-nocov]
commands =
  python -m build --no-isolation
  pip install threaded --no-index -f dist
  py.test {posargs:test}

[testenv:venv]
commands = {posargs:}

[testenv:ruff]
skip_install = true
depends = black,isort
deps = ruff
commands = ruff check .

[testenv:refurb]
skip_install = true
depends = black,isort
deps = refurb
commands = refurb threaded

[testenv:pep8]
skip_install = true
depends = black,isort
deps =
  -r{toxinidir}/flake8_requirements.txt
commands = flake8 threaded

[testenv:pep257]
skip_install = true
depends = black,isort
deps =
  pydocstyle[toml]
commands = pydocstyle -v threaded

[testenv:doc8]
skip_install = true
deps =
  doc8
  Pygments
commands = doc8 README.rst doc/source

[testenv:install]
deps =
commands = pip install ./ -vvv -U

[testenv:pylint]
depends = pep8,ruff,pep257,bandit
deps =
  pylint>=3.0.0
  -r{toxinidir}/CI_REQUIREMENTS.txt
commands =
  pylint threaded

[testenv:docs]
depends = doc8,readme
deps =
  sphinx
commands = sphinx-build doc/source/ doc/build

[testenv:readme]
skip_install = true
deps =
  twine
  build
commands =
  python -m build -s
  twine check {toxinidir}/dist/*

[testenv:bandit]
depends = black,isort
deps = bandit
commands = bandit -r threaded

[testenv:dep-graph]
deps =
  .
  pipdeptree
commands = pipdeptree

[testenv:black]
skip_install = true
depends = isort
deps =
  black
  regex
commands =
  black threaded

[testenv:mypy]
depends = pep8,ruff,pep257,bandit
deps =
  mypy>=1.7.0
  lxml
  -r{toxinidir}/CI_REQUIREMENTS.txt
commands =
  mypy --strict threaded

[testenv:isort]
skip_install = true
deps =
  isort
commands =
  isort threaded

[flake8]
exclude =
  .venv,
  .git,
  .tox,
  dist,
  doc,
  *lib/python*,
  *egg,
  build,
  __init__.py,
  _version.py,
  docs
ignore =
  E203,
# whitespace before ':'
  W503,
# line break before binary operator
  D401,
# First line should be in imperative mood; try rephrasing
  D202,
# No blank lines allowed after function docstring
  D203,
# 1 blank line required before class docstring
  D213
# Multi-line docstring summary should start at the second line
show-pep8 = True
show-source = True
count = True
max-line-length = 120
